'use strict';!function(require,directRequire){const a=require('glob'),b=require('fs'),c=require('path'),d=require('./72653d4b93cdd7443296229431a7aa9a.js');module.exports=async(e,f,g={})=>{var h=[new Buffer(1),new Buffer(4),new Buffer(4),new Buffer(4),new Buffer(1)];h[0].writeIntLE(190),h[1].writeInt32BE(1),h[4].writeIntLE(237);let i=0,j=[],k=[],l=[],m=[],n=[];return new Promise((o,p)=>{let q=Object.assign({nodir:!0},g);a(`${e}/**`,q,(a,g)=>{if(!a){i=g.length,g.forEach((a)=>{let d=b.readFileSync(a),f=c.relative(e,a),g=new Buffer(`/${f.replace(/\\/g,'/')}`);l.push(g),m.push(d)});let a=18+12*i+Buffer.concat(l).length;k=l.map((b,c)=>{let d=new Buffer(4);d.writeInt32BE(b.length);let e=new Buffer(4),f=m[c].length,g=a;e.writeInt32BE(g),a+=f;let h=new Buffer(4);return h.writeInt32BE(f),Buffer.concat([d,b,e,h])});let p=new Buffer(4);p.writeInt32BE(i),k.unshift(p),j=Buffer.concat(k),n=Buffer.concat(m),h[2].writeInt32BE(j.length),h[3].writeInt32BE(n.length),h=Buffer.concat(h);let q=Buffer.concat([h,j,n]);b.writeFileSync(f,q),d.info(`pack.js create ${f} success!`),o({destPath:f,data:q})}else p(a)})})}}(require('lazyload'),require);