"use strict";function SNIPrepareCert(e,r){var t,o,c;async.series([function(r){certMgr.getCertificate(e,function(e,c,a){e?r(e):(t=c,o=a,r())})},function(e){try{c=createSecureContext({key:t,cert:o}),e()}catch(r){e(r)}}],function(t,o){if(t)logUtil.printLog("err occurred when prepare certs for SNI - "+t,logUtil.T_ERR),logUtil.printLog("you may upgrade your Node.js to >= v0.12",logUtil.T_ERR);else{var a="proxy server for __NAME established".replace("__NAME",e);logUtil.printLog(color.yellow(color.bold("[internal https]"))+color.yellow(a)),r(null,c)}})}var getPort=require("./getPort"),async=require("async"),http=require("http"),https=require("https"),fs=require("fs"),net=require("net"),tls=require("tls"),path=require("path"),crypto=require("crypto"),color=require("colorful"),certMgr=require("./certMgr"),logUtil=require("./log"),asyncTask=require("async-task-mgr"),WebSocket=require("faye-websocket"),createSecureContext=tls.createSecureContext||crypto.createSecureContext,httpsServerKeyPath=path.join(__dirname,"..","a_c_r","https_server.key"),httpsServerCrtPath=path.join(__dirname,"..","a_c_r","https_server.crt"),httpsServerKey=fs.readFileSync(httpsServerKeyPath),httpsServerCrt=fs.readFileSync(httpsServerCrtPath);module.exports=function(e){if(!e||!e.port)throw new Error("please assign a port");var r=https.createServer({SNICallback:SNIPrepareCert,key:httpsServerKey,cert:httpsServerCrt},e.handler).listen(e.port);r.on("upgrade",function(e,r,t){if(WebSocket.isWebSocket(e)){var o=new WebSocket(e,r,t);o.on("message",function(e){o.send(e.data)}),o.on("close",function(e){o=null})}})};