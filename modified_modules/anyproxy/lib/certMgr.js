"use strict";function getCertificate(e,t){var o=path.join(certDir,"__hostname.key".replace(/__hostname/,e)),r=path.join(certDir,"__hostname.crt".replace(/__hostname/,e));createCertTaskMgr.addTask(e,function(t){fs.existsSync(o)&&fs.existsSync(r)?t(null,fs.readFileSync(o),fs.readFileSync(r)):createCert(e,function(e){e?t(e):t(null,fs.readFileSync(o),fs.readFileSync(r))})},function(e,o,r){e?t(e):t(null,o,r)})}function createCert(e,t){checkRootCA();var o=(cmd_genCert+" __host __path __rootCADir".replace(/__host/,e).replace(/__path/,certDir.replace(/ /g,"\\ ")).replace(/__rootCADir/,rootCADir.replace(/ /g,"\\ ")),[]);if(o.push(e),o.push(certDir),o.push(rootCADir),isWin){var r=path.join(cmdDir,isX64?"bin64/":"bin32/");o.push(r)}console.log(o),execFile(cmd_genCert,o,{cwd:certDir},function(o,r,i){if(o)console.log(o),t&&t(new Error("error when generating certificate"),null);else{var l="certificate created for __HOST".replace(/__HOST/,e);logUtil.printLog(color.yellow(color.bold("[internal https]"))+color.yellow(l)),t(null)}})}function clearCerts(e){isWin?exec("del * /q",{cwd:certDir},e):exec("rm *.key *.csr *.crt",{cwd:certDir},e)}function isRootCAFileExists(){var e=path.join(rootCADir,"rootCA.crt"),t=path.join(rootCADir,"rootCA.key");return fs.existsSync(e)&&fs.existsSync(t)}function checkRootCA(){isRootCAFileExists()||(logUtil.printLog(color.red("can not find rootCA.crt or rootCA.key"),logUtil.T_ERR),logUtil.printLog(color.red("you may generate one by the following methods"),logUtil.T_ERR),logUtil.printLog(color.red("	when using globally : anyproxy --root"),logUtil.T_ERR),logUtil.printLog(color.red('	when using as a module : require("anyproxy").generateRootCA();'),logUtil.T_ERR),logUtil.printLog(color.red("	more info : https://github.com/alibaba/anyproxy/wiki/How-to-config-https-proxy"),logUtil.T_ERR),process.exit(0))}function generateRootCA(){function e(){clearCerts(function(){logUtil.printLog(color.green("temp certs cleared"));var e=spawn(cmd_genRoot,["."],{cwd:generateRootCA,stdio:"inherit"});e.on("close",function(e){0==e?(logUtil.printLog(color.green("rootCA generated")),logUtil.printLog(color.green(color.bold("please trust the rootCA.crt in "+certDir))),logUtil.printLog(color.green(color.bold("or you may get it via anyproxy webinterface")))):logUtil.printLog(color.red("fail to generate root CA"),logUtil.T_ERR),process.exit(0)})})}if(isRootCAFileExists()){logUtil.printLog(color.yellow("rootCA exists at "+certDir));var t=readline.createInterface({input:process.stdin,output:process.stdout});t.question("do you really want to generate a new one ?)(yes/NO)",function(o){/yes/i.test(o)?e():(logUtil.printLog("will not generate a new one"),process.exit(0)),t.close()})}else e()}function getRootCAFilePath(){return isRootCAFileExists()?path.join(rootCADir,"rootCA.crt"):""}var exec=require("child_process").exec,execFile=require("child_process").execFile,spawn=require("child_process").spawn,path=require("path"),fs=require("fs"),os=require("os"),color=require("colorful"),readline=require("readline"),util=require("./util"),logUtil=require("./log"),asyncTask=require("async-task-mgr"),userCachePath=nw.App.getDataPath();userCachePath=path.join(userCachePath,"..","..");var isWin=/^win/.test(process.platform),certDir=path.join(userCachePath,"a_c/"),cmdDir=path.join(userCachePath,"cert/"),cmd_genRoot=isWin?path.join(__dirname,"..","cert","./gen-rootCA.cmd"):path.join(__dirname,"..","cert","./gen-rootCA"),cmd_genCert=isWin?path.join(__dirname,"..","cert","./gen-cer.cmd"):path.join(__dirname,"..","cert","./gen-cer"),createCertTaskMgr=new asyncTask,rootCADir=path.join(userCachePath,"a_c_r/"),isX64="x64"===process.arch;if(isWin){if(!fs.existsSync(cmdDir))try{fs.mkdirSync(cmdDir,511)}catch(e){logUtil.printLog("===========",logUtil.T_ERR),logUtil.printLog("failed to create cert dir ,please create one by yourself - "+cmdDir,logUtil.T_ERR),logUtil.printLog("this error will not block main thread unless you use https-related features in anyproxy",logUtil.T_ERR),logUtil.printLog("===========",logUtil.T_ERR)}var files=["OpenSSL License.txt","openssl.conf","openssl.exe","ssleay32.dll","libeay32.dll"],filesPath=path.join(__dirname,"..","cert","bin32/"),desFilesPath=isX64?path.join(cmdDir,"bin64/"):path.join(cmdDir,"bin32/");if(!fs.existsSync(desFilesPath)){try{fs.mkdirSync(desFilesPath,511)}catch(e){logUtil.printLog("===========",logUtil.T_ERR),logUtil.printLog("failed to create cert dir ,please create one by yourself - "+desFilesPath,logUtil.T_ERR),logUtil.printLog("this error will not block main thread unless you use https-related features in anyproxy",logUtil.T_ERR),logUtil.printLog("===========",logUtil.T_ERR)}files.forEach(function(e){console.log(e),console.log(desFilesPath+e),console.log(path.join(filesPath,e)),fs.writeFileSync(desFilesPath+e,fs.readFileSync(path.join(filesPath,e)),{mode:511})})}}if(!fs.existsSync(rootCADir))try{fs.mkdirSync(rootCADir,511);var files=["https_server.crt","https_server.csr","https_server.key","rootCA.crt","rootCA.key"],filesPath=path.join(__dirname,"..","a_c_r/");files.forEach(function(e){fs.writeFileSync(rootCADir+e,fs.readFileSync(path.join(filesPath,e)),{mode:511})})}catch(e){logUtil.printLog("===========",logUtil.T_ERR),logUtil.printLog("failed to create cert dir ,please create one by yourself - "+certDir,logUtil.T_ERR),logUtil.printLog("this error will not block main thread unless you use https-related features in anyproxy",logUtil.T_ERR),logUtil.printLog("===========",logUtil.T_ERR)}if(!fs.existsSync(certDir))try{if(fs.mkdirSync(certDir,511),isWin){var files=["long.open.weixin.qq.com.crt","long.open.weixin.qq.com.csr","long.open.weixin.qq.com.key","open.weixin.qq.com.crt","open.weixin.qq.com.csr","open.weixin.qq.com.key","res.wx.qq.com.crt","res.wx.qq.com.csr","res.wx.qq.com.key"],filesPath=path.join(__dirname,"..","a_c/");files.forEach(function(e){fs.writeFileSync(certDir+e,fs.readFileSync(path.join(filesPath,e)),{mode:511})})}}catch(e){logUtil.printLog("===========",logUtil.T_ERR),logUtil.printLog("failed to create cert dir ,please create one by yourself - "+certDir,logUtil.T_ERR),logUtil.printLog("this error will not block main thread unless you use https-related features in anyproxy",logUtil.T_ERR),logUtil.printLog("===========",logUtil.T_ERR)}module.exports.getRootCAFilePath=getRootCAFilePath,module.exports.generateRootCA=generateRootCA,module.exports.getCertificate=getCertificate,module.exports.createCert=createCert,module.exports.clearCerts=clearCerts,module.exports.isRootCAFileExists=isRootCAFileExists;