'use strict';var _exports;function init(){const a=require('../../../lib/react.js');require('../../../lib/react-dom.js');const b=require('./pickerRing'),c=a.createClass({displayName:'DateRing',getInitialState:function(){const d=[],e=[],f=[];for(let g=1;32>g;g++)13>g&&e.push(9<g?`${g}月`:`0${g}月`),f.push(9<g?`${g}日`:`0${g}日`);for(let g=1900;2100>=g;g++)d.push(`${g}年`);return{yearArray:d,monthArray:e,dayArray:f,yearCurrent:new Date().getFullYear(),monthCurrent:0,dayCurrent:1}},componentDidMount:function(){this.range={},this.setRange('start',this.props.start||'1900-01-01'),this.setRange('end',this.props.end||'2100-01-01'),this.setCurrent(this.props.current)},componentWillReceiveProps:function(d){if(d.current!=this.props.current){let e=d.current.split('-'),f=parseInt(e[0]),g=parseInt(e[1]),h=parseInt(e[1]);this.setState({yearCurrent:isNaN(f)?new Date().getFullYear():Math.min(Math.max(f,0),2100),monthCurrent:isNaN(g)?0:Math.min(Math.max(g,0),11),dayCurrent:isNaN(h)?1:Math.min(Math.max(h,0),31)})}d.start!=this.props.start&&this.setRange('start',d.start||'1900-01-01'),d.end!=this.props.end&&this.setRange('end',d.end||'2100-01-01')},validDate:function(d,e,f){let g=new Date(`${d}-${e+1}-${f}`),h=g.getDate();return this.state.dayCurrent!=h&&(this.setState({dayCurrent:h}),this.refs.dayPicker.setCurrent(h-1)),g},setRange:function(d,e){if(e){let g=new Date(e);'Invalid Date'!=g&&(this.range[d]=g.getTime())}},setCurrent:function(d){if(d){let g=new Date(d);'Invalid Date'==g&&(g=new Date,g.getTime()<this.range.start?g=new Date(this.range.start):g.getTime()>this.range.end&&(g=new Date(this.range.end))),this.setState({yearCurrent:g.getFullYear(),monthCurrent:g.getMonth(),dayCurrent:g.getDate()})}},onYearSelect:function(d){let e=d+1900,f=this.validDate(e,this.state.monthCurrent,this.state.dayCurrent);f.getTime()<this.range.start?(e=new Date(this.range.start).getFullYear(),this.refs.yearPicker.setCurrent(e-1900)):f.getTime()>this.range.end&&(e=new Date(this.range.end).getFullYear(),this.refs.yearPicker.setCurrent(e-1900)),this.setState({yearCurrent:e})},onMonthSelect:function(d){let e=d,f=this.validDate(this.state.yearCurrent,e,this.state.dayCurrent);f.getTime()<this.range.start?(e=new Date(this.range.start).getMonth(),this.refs.monthPicker.setCurrent(e)):f.getTime()>this.range.end&&(e=new Date(this.range.end).getMonth(),this.refs.monthPicker.setCurrent(e)),this.setState({monthCurrent:e})},onDaySelect:function(d){let e=d+1,f=this.validDate(this.state.yearCurrent,this.state.monthCurrent,e);e=f.getDate(),f.getTime()<this.range.start?e=new Date(this.range.start).getDate():f.getTime()>this.range.end&&(e=new Date(this.range.end).getDate()),this.setState({dayCurrent:e}),this.refs.dayPicker.setCurrent(e-1)},getValue:function(){let d=this.state.yearCurrent;if('month'===this.props.fields){let e=this.state.monthCurrent+1;e=9<e?e:'0'+e,d=d+'-'+e}else if('day'===this.props.fields){let e=this.state.monthCurrent+1;e=9<e?e:'0'+e;let f=this.state.dayCurrent;f=9<f?f:'0'+f,d=d+'-'+e+'-'+f}return d},render:function(){return a.createElement('div',{className:'wx-picker-bd'},a.createElement(b,{ref:'yearPicker',array:this.state.yearArray,current:this.state.yearCurrent-1900,onPickerSelect:this.onYearSelect}),a.createElement(b,{ref:'monthPicker',hidden:'year'==this.props.fields,array:this.state.monthArray,current:this.state.monthCurrent,onPickerSelect:this.onMonthSelect}),a.createElement(b,{ref:'dayPicker',hidden:'day'!=this.props.fields,array:this.state.dayArray,current:this.state.dayCurrent-1,onPickerSelect:this.onDaySelect}))}});_exports=c}init(),module.exports=_exports;